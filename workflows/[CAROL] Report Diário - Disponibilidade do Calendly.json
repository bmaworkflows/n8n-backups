{
  "active": true,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Data Atual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Atual": {
      "main": [
        [
          {
            "node": "adiciona 1 dia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time2": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Notifica grupo | Renan2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Renan| Sem horários2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time3": {
      "main": [
        [
          {
            "node": "Summarize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Notifica grupo | Renan3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Renan| Sem horários3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CGB - Carol": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CGF - Carol": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Renan| Sem horários2": {
      "main": [
        [
          {
            "node": "Tráfego | Sem horários2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notifica grupo | Renan2": {
      "main": [
        [
          {
            "node": "Notifica grupo | Tráfego2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Renan| Sem horários3": {
      "main": [
        [
          {
            "node": "Tráfego | Sem horários3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notifica grupo | Renan3": {
      "main": [
        [
          {
            "node": "Notifica grupo | Tráfego3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Data Atual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "adiciona 10 dias": {
      "main": [
        [
          {
            "node": "CGB - Carol",
            "type": "main",
            "index": 0
          },
          {
            "node": "CGF - Carol",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "adiciona 1 dia": {
      "main": [
        [
          {
            "node": "adiciona 10 dias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Summarize2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Notifica grupo | Renan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Renan| Sem horários",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CGB - Carol1": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Renan| Sem horários": {
      "main": [
        [
          {
            "node": "Tráfego | Sem horários",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notifica grupo | Renan": {
      "main": [
        [
          {
            "node": "Notifica grupo | Tráfego",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "Data Atual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-29T14:00:19.587Z",
  "id": "TsTs3Wsib11kZ65H",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[CAROL] Report Diário - Disponibilidade do Calendly",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9,
              "triggerAtMinute": 2
            }
          ]
        }
      },
      "id": "684c17f8-17bf-4ef4-830a-3705b0c0f1c3",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1280,
        240
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "collection",
        "options": {}
      },
      "id": "28544a76-4b85-484c-9a19-4c2becb5a741",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        960,
        80
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.start_time }}",
        "format": "custom",
        "customFormat": "dd/MM/yyyy HH:mm",
        "options": {
          "timezone": true
        }
      },
      "id": "99bb699b-58f4-4a2f-a80c-c84938c03bde",
      "name": "Date & Time2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1480,
        100
      ]
    },
    {
      "parameters": {
        "jsCode": "const datesArray = $input.all()[0].json[\"appended_formattedDate\"]\n\nfunction generateWhatsAppMessage(datesArray) {\n  let message = \"*Report Diário*\\n\\nSegue o resumo de horários disponíveis para o *CG da Carol - Bootcamp e Acelera*:\\n\\n\";\n\n  datesArray.forEach(dateObj => {\n    message += `${dateObj}\\n`;\n  });\n\n  return message;\n}\n\nconst whatsappMessage = generateWhatsAppMessage(datesArray);\n\nreturn {whatsappMessage}\n"
      },
      "id": "9f6298fa-5155-4360-8e1c-e6e6c725a210",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1920,
        100
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "append",
              "field": "formattedDate"
            }
          ]
        },
        "options": {}
      },
      "id": "c7d3479b-312f-4027-bc4a-4485f2f4fc98",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1700,
        100
      ]
    },
    {
      "parameters": {
        "options": {
          "timezone": "America/Sao_Paulo"
        }
      },
      "id": "c292ce38-86e3-4835-b638-3ad09dc84f7f",
      "name": "Data Atual",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1040,
        400
      ]
    },
    {
      "parameters": {
        "jsCode": "function addBusinessDays(startDateStr) {\n  // Parse the input date string into a Date object\n  let startDate = new Date(startDateStr);\n  \n  // Set the time to the start of the day (midnight)\n  startDate.setHours(0, 0, 0, 0);\n\n  // Initialize the final date as the start date\n  let finalDate = new Date(startDate);\n\n  // Function to add a business day\n  const addBusinessDay = (date) => {\n    date.setDate(date.getDate() + 1);\n    if (date.getDay() === 6) { // If Saturday\n      date.setDate(date.getDate() + 2);\n    } else if (date.getDay() === 0) { // If Sunday\n      date.setDate(date.getDate() + 1);\n    }\n  };\n\n  // Special rules for Thursday and Friday\n  if (startDate.getDay() === 4) { // If Thursday\n    finalDate.setDate(startDate.getDate() + 5); // Move to next Tuesday\n  } else if (startDate.getDay() === 5) { // If Friday\n    finalDate.setDate(startDate.getDate() + 5); // Move to next Wednesday\n  } else {\n    // Add three business days to the final date\n    for (let i = 0; i < 3; i++) {\n      addBusinessDay(finalDate);\n    }\n  }\n\n  // Format the dates back to ISO strings\n  const initialDateStr = startDate.toISOString();\n  const finalDateStr = finalDate.toISOString();\n\n  // Return the initial and final dates\n  return {\n    initialDate: initialDateStr,\n    finalDate: finalDateStr\n  };\n}\n\n// Exemplo de uso:\nconst inputDate = $('adiciona 10 dias').all()[0].json['currentDate'];\nconst result = addBusinessDays(inputDate);\n\nreturn {result}\n"
      },
      "id": "5413721c-1ae6-460d-98bb-545e8f25a157",
      "name": "Set de Datas",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7a121759-5e0e-4be1-809d-0bd7b4b4ee3a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e1a4d814-df59-4fd1-91fe-26df5ee665ce",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        80
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "collection",
        "options": {}
      },
      "id": "c8100e95-1997-412e-a17c-6b0379ed3d46",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        980,
        640
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.start_time }}",
        "format": "custom",
        "customFormat": "dd/MM/yyyy HH:mm",
        "options": {
          "timezone": true
        }
      },
      "id": "b98b9794-6093-42b7-bff9-e8b5f477caf5",
      "name": "Date & Time3",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1500,
        660
      ]
    },
    {
      "parameters": {
        "jsCode": "const datesArray = $input.all()[0].json[\"appended_formattedDate\"]\n\nfunction generateWhatsAppMessage(datesArray) {\n  let message = \"*Report Diário*\\n\\nSegue o resumo de horários disponíveis para o *CG da Carol - Formação*:\\n\\n\";\n\n  datesArray.forEach(dateObj => {\n    message += `${dateObj}\\n`;\n  });\n\n  return message;\n}\n\nconst whatsappMessage = generateWhatsAppMessage(datesArray);\n\nreturn {whatsappMessage}\n"
      },
      "id": "ca4c9ed7-1b41-4e9c-b1bf-9a29994fdb65",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1940,
        660
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "append",
              "field": "formattedDate"
            }
          ]
        },
        "options": {}
      },
      "id": "dff21b1d-456e-453b-b612-495b099189c7",
      "name": "Summarize1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1720,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7a121759-5e0e-4be1-809d-0bd7b4b4ee3a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6457dc0f-7915-43f0-b838-70a988bd8d04",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1200,
        640
      ]
    },
    {
      "parameters": {
        "url": "https://api.calendly.com/event_type_available_times",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "event_type",
              "value": "https://api.calendly.com/event_types/928fbfd0-9d18-4523-b41f-a5fe8365c34f"
            },
            {
              "name": "start_time",
              "value": "={{ new Date(new Date($('adiciona 1 dia').item.json.currentDate).setUTCHours(0, 0, 0, 0)).toISOString() }}"
            },
            {
              "name": "end_time",
              "value": "={{ new Date(new Date($('adiciona 10 dias').item.json.currentDate).setUTCHours(23, 59, 59, 0)).toISOString() }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer eyJraWQiOiIxY2UxZTEzNjE3ZGNmNzY2YjNjZWJjY2Y4ZGM1YmFmYThhNjVlNjg0MDIzZjdjMzJiZTgzNDliMjM4MDEzNWI0IiwidHlwIjoiUEFUIiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiJodHRwczovL2F1dGguY2FsZW5kbHkuY29tIiwiaWF0IjoxNzE2NTE3NTkwLCJqdGkiOiI3YzVmYmFkMy03OWE5LTQyYWMtYjU3OS00OTdjZDM3MzEzNzciLCJ1c2VyX3V1aWQiOiIzNDhhMzczNy0yM2FlLTQ5OWEtYWE1Yi03NzcxNGUyYTFhMGYifQ.RSPn53KepZrsBC0MCr-DXUUTfltNmHdSD71CJO3DmtXrMzl-JT_aKummnfK7XXhGDgmYGDscvcvot0D0BQPxMg"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "79c0ee21-438e-45ef-b8ef-1f0e26bce13f",
      "name": "CGB - Carol",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        740,
        80
      ]
    },
    {
      "parameters": {
        "url": "https://api.calendly.com/event_type_available_times",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "event_type",
              "value": "https://api.calendly.com/event_types/beacb206-b5a6-421b-8761-0a919e460401"
            },
            {
              "name": "start_time",
              "value": "={{ new Date(new Date($('adiciona 1 dia').item.json.currentDate).setUTCHours(0, 0, 0, 0)).toISOString() }}"
            },
            {
              "name": "end_time",
              "value": "={{ new Date(new Date($('adiciona 10 dias').item.json.currentDate).setUTCHours(23, 59, 59, 0)).toISOString() }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer eyJraWQiOiIxY2UxZTEzNjE3ZGNmNzY2YjNjZWJjY2Y4ZGM1YmFmYThhNjVlNjg0MDIzZjdjMzJiZTgzNDliMjM4MDEzNWI0IiwidHlwIjoiUEFUIiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiJodHRwczovL2F1dGguY2FsZW5kbHkuY29tIiwiaWF0IjoxNzE2NTE3NTkwLCJqdGkiOiI3YzVmYmFkMy03OWE5LTQyYWMtYjU3OS00OTdjZDM3MzEzNzciLCJ1c2VyX3V1aWQiOiIzNDhhMzczNy0yM2FlLTQ5OWEtYWE1Yi03NzcxNGUyYTFhMGYifQ.RSPn53KepZrsBC0MCr-DXUUTfltNmHdSD71CJO3DmtXrMzl-JT_aKummnfK7XXhGDgmYGDscvcvot0D0BQPxMg"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "bc2182f7-4531-4f79-9bbf-177b1e577993",
      "name": "CGF - Carol",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363285621576178-group"
            },
            {
              "name": "message",
              "value": "=*Report Diário*\n\nCG da Carol - Bootcamp e Acelera *sem horários disponíveis*"
            }
          ]
        },
        "options": {}
      },
      "id": "038613cc-5ce1-452a-93db-72983cf4b24b",
      "name": "Renan| Sem horários2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1480,
        -140
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363184549720499-group"
            },
            {
              "name": "message",
              "value": "=*Report Diário*\n\nCG da Carol - Bootcamp e Acelera *sem horários disponíveis*"
            }
          ]
        },
        "options": {}
      },
      "id": "3be2c9c4-600c-483c-8f8b-85e7e042e5be",
      "name": "Tráfego | Sem horários2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1700,
        -140
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363285621576178-group"
            },
            {
              "name": "message",
              "value": "={{ $json.whatsappMessage }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a77ecdd3-f9b9-43d6-9729-d7a3335e9097",
      "name": "Notifica grupo | Renan2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2140,
        100
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363184549720499-group"
            },
            {
              "name": "message",
              "value": "={{ $('Code').item.json.whatsappMessage }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d851aa70-0a70-4ace-8ef7-5cc6f5006a58",
      "name": "Notifica grupo | Tráfego2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2380,
        100
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363285621576178-group"
            },
            {
              "name": "message",
              "value": "=*Report Diário*\n\nCG da Carol - Formação *sem horários disponíveis*"
            }
          ]
        },
        "options": {}
      },
      "id": "e607df4d-c85b-4bfe-b245-4a1a88731b0b",
      "name": "Renan| Sem horários3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1500,
        460
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363184549720499-group"
            },
            {
              "name": "message",
              "value": "=*Report Diário*\n\nCG da Carol - Formação *sem horários disponíveis*"
            }
          ]
        },
        "options": {}
      },
      "id": "0169e8b5-d644-4d71-814f-c6a2b12006c0",
      "name": "Tráfego | Sem horários3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1720,
        460
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363285621576178-group"
            },
            {
              "name": "message",
              "value": "={{ $json.whatsappMessage }}\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "4d467010-9613-443a-9487-cc27ed8eca85",
      "name": "Notifica grupo | Renan3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2140,
        660
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363184549720499-group"
            },
            {
              "name": "message",
              "value": "={{ $('Code1').item.json.whatsappMessage }}"
            }
          ]
        },
        "options": {}
      },
      "id": "705acd4e-9e04-4195-9368-1870bff921ec",
      "name": "Notifica grupo | Tráfego3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2380,
        660
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 15,
              "triggerAtMinute": 2
            }
          ]
        }
      },
      "id": "6206f32e-d690-4df0-82c9-ee427c659062",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1280,
        560
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $json.currentDate }}",
        "duration": 6,
        "outputFieldName": "currentDate",
        "options": {}
      },
      "id": "54788b86-9f01-4ad1-835f-98af5cb78a28",
      "name": "adiciona 10 dias",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -280,
        400
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $json.currentDate }}",
        "duration": 1,
        "outputFieldName": "currentDate",
        "options": {}
      },
      "id": "9f47f0f9-837d-4e27-b227-320f4831b1a5",
      "name": "adiciona 1 dia",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -700,
        400
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "collection",
        "options": {}
      },
      "id": "8f4140e9-77fc-4c89-8401-c7cdb07a85c0",
      "name": "Split Out2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        920,
        -640
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.start_time }}",
        "format": "custom",
        "customFormat": "dd/MM/yyyy HH:mm",
        "options": {
          "timezone": true
        }
      },
      "id": "3262dc83-c0dc-477d-846f-a8d844ae9193",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1440,
        -620
      ]
    },
    {
      "parameters": {
        "jsCode": "const datesArray = $input.all()[0].json[\"appended_formattedDate\"]\n\nfunction generateWhatsAppMessage(datesArray) {\n  let message = \"*Report Diário*\\n\\nSegue o resumo de horários disponíveis para o *CG Unificado da Carol*:\\n\\n\";\n\n  datesArray.forEach(dateObj => {\n    message += `${dateObj}\\n`;\n  });\n\n  return message;\n}\n\nconst whatsappMessage = generateWhatsAppMessage(datesArray);\n\nreturn {whatsappMessage}\n"
      },
      "id": "9f89831a-7f47-429e-93e8-f9e4598245f9",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1880,
        -620
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "append",
              "field": "formattedDate"
            }
          ]
        },
        "options": {}
      },
      "id": "2d19a8b1-0ed5-4f21-9bae-9334eccdb1c1",
      "name": "Summarize2",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1660,
        -620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7a121759-5e0e-4be1-809d-0bd7b4b4ee3a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "700ae6c0-3701-4474-b292-764d8afbfb96",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1140,
        -640
      ]
    },
    {
      "parameters": {
        "url": "https://api.calendly.com/event_type_available_times",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "event_type",
              "value": "https://api.calendly.com/event_types/6d4c4486-3290-4c66-ac9f-2f4a7f93de9e"
            },
            {
              "name": "start_time",
              "value": "={{ new Date(new Date($('adiciona 1 dia').item.json.currentDate).setUTCHours(0, 0, 0, 0)).toISOString() }}"
            },
            {
              "name": "end_time",
              "value": "={{ new Date(new Date($('adiciona 10 dias').item.json.currentDate).setUTCHours(23, 59, 59, 0)).toISOString() }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer eyJraWQiOiIxY2UxZTEzNjE3ZGNmNzY2YjNjZWJjY2Y4ZGM1YmFmYThhNjVlNjg0MDIzZjdjMzJiZTgzNDliMjM4MDEzNWI0IiwidHlwIjoiUEFUIiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiJodHRwczovL2F1dGguY2FsZW5kbHkuY29tIiwiaWF0IjoxNzE2NTE3NTkwLCJqdGkiOiI3YzVmYmFkMy03OWE5LTQyYWMtYjU3OS00OTdjZDM3MzEzNzciLCJ1c2VyX3V1aWQiOiIzNDhhMzczNy0yM2FlLTQ5OWEtYWE1Yi03NzcxNGUyYTFhMGYifQ.RSPn53KepZrsBC0MCr-DXUUTfltNmHdSD71CJO3DmtXrMzl-JT_aKummnfK7XXhGDgmYGDscvcvot0D0BQPxMg"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "37866e7b-ef2c-4ecb-af42-8b002d5bbf40",
      "name": "CGB - Carol1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        -640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363285621576178-group"
            },
            {
              "name": "message",
              "value": "=*Report Diário*\n\nCG Unificado da Carol *sem horários disponíveis*"
            }
          ]
        },
        "options": {}
      },
      "id": "b3f3a2f0-d0d3-4ab4-a285-5db351d26778",
      "name": "Renan| Sem horários",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1440,
        -860
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363184549720499-group"
            },
            {
              "name": "message",
              "value": "=*Report Diário*\n\nCG Unificado da Carol *sem horários disponíveis*"
            }
          ]
        },
        "options": {}
      },
      "id": "dcc832be-bf92-4583-83ed-7a281f4e5fd4",
      "name": "Tráfego | Sem horários",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1660,
        -860
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363285621576178-group"
            },
            {
              "name": "message",
              "value": "={{ $json.whatsappMessage }}"
            }
          ]
        },
        "options": {}
      },
      "id": "06ed2352-5162-4f15-a959-bb1b98519d43",
      "name": "Notifica grupo | Renan",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2100,
        -620
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3CFE88963A26408D365B72B70F2FFCF9/token/DA84CEA8EC9897345A31EA92/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fdeb892ca62d941adbb85b2ec7c8e3a4aS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "=120363184549720499-group"
            },
            {
              "name": "message",
              "value": "={{ $('Code2').item.json.whatsappMessage }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3f5b857f-7092-4eb1-af3c-597c1ec4071b",
      "name": "Notifica grupo | Tráfego",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2340,
        -620
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "content": "## CG GERAL",
        "height": 776.7441860465117,
        "width": 2085.39534883721
      },
      "id": "0b7271a4-993a-48ad-be76-f2b27f31d927",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        560,
        -980
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 21
            }
          ]
        }
      },
      "id": "a1a2b0df-1c6c-4a29-ad48-b51451ea2669",
      "name": "Schedule Trigger2",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1260,
        -20
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [],
      "recurrenceRules": []
    },
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger2": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-05-23T03:18:57.576Z",
      "updatedAt": "2024-05-23T03:18:57.576Z",
      "id": "ZAUbeJXqG1plGMYs",
      "name": "carol"
    }
  ],
  "triggerCount": 3,
  "updatedAt": "2025-04-01T04:40:23.740Z",
  "versionId": "05a0f468-3722-4cc0-bdf8-1f33d237310f"
}